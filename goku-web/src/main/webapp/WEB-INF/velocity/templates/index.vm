#define($customStyle)
<style type="text/css">
    pre {
        outline: 0px solid #ccc;
        border: 0px solid #ccc;
        padding: 0px;
        margin: 0px;
    }

    .string {
        color: green;
    }

    .number {
        color: darkorange;
    }

    .boolean {
        color: blue;
    }

    .null {
        color: magenta;
    }

    .key {
        color: red;
    }
</style>
#end
#define($customContent)
<form class="form-horizontal">
    <div class="form-group">
        <label for="userName" class="col-sm-2 control-label">待加密参数：</label>
        <div class="col-sm-8">
            <textarea class="form-control" id="param" rows="10"></textarea>
        </div>
    </div>
    <div class="form-group">
        <label for="nickName" class="col-sm-2 control-label">token：</label>
        <div class="col-sm-8">
            <input type="text" class="form-control" id="token"></input>
        </div>
    </div>
    <div class="form-group">
        <label for="nickName" class="col-sm-2 control-label">version：</label>
        <div class="col-sm-8">
            <input type="text" class="form-control" id="version"></input>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="button" class="btn btn-primary" id="encryption">加密</button>
        </div>
    </div>
</form>
结果
<pre id="result"></pre>
#end
#define($customScript)
<script type="text/javascript">
    $("#encryption").click(function (event) {
        try {
            var param = $.parseJSON($("#param").val());
            if (param.password) {
                param.password = MD5(param.password);
            }
            if (param.password2) {
                param.password2 = MD5(param.password2);
            }
            $("#result").html(syntaxHighlight(ParamUtils.createParam(param, $("#token").val(), $("#version").val())));
        } catch (e) {
            alert(e);
        }
    });
    function syntaxHighlight(json) {
        if (typeof json != 'string') {
            json = JSON.stringify(json, undefined, 2);
        }
        json = json.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>');
        return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
            var cls = 'number';
            if (/^"/.test(match)) {
                if (/:$/.test(match)) {
                    cls = 'key';
                } else {
                    cls = 'string';
                }
            } else if (/true|false/.test(match)) {
                cls = 'boolean';
            } else if (/null/.test(match)) {
                cls = 'null';
            }
            return '<span class="' + cls + '">' + match + '</span>';
        });
    }
</script>
#end